package com.example.domainchecker.service;

import com.example.domainchecker.entity.DomainResult;
import com.opencsv.CSVWriter;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Table;
import com.itextpdf.layout.properties.TextAlignment;
import com.itextpdf.layout.properties.UnitValue;
import org.apache.poi.xwpf.usermodel.*;
import org.springframework.stereotype.Service;

import java.io.ByteArrayOutputStream;
import java.io.StringWriter;
import java.time.format.DateTimeFormatter;
import java.util.List;

@Service
public class ExportService {
    
    private static final DateTimeFormatter DATE_FORMATTER = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
    
    /**
     * Export domain results to CSV format
     */
    public byte[] exportToCSV(List<DomainResult> results) {
        try {
            StringWriter stringWriter = new StringWriter();
            CSVWriter csvWriter = new CSVWriter(stringWriter);
            
            // Write header
            csvWriter.writeNext(new String[]{
                "Domain", "Reachable", "HTTP Status", "Virus Check", "Checked At", "Virus Details"
            });
            
            // Write data
            for (DomainResult result : results) {
                csvWriter.writeNext(new String[]{
                    result.getDomain(),
                    result.getReachable() ? "Yes" : "No",
                    result.getHttpStatus() != null ? result.getHttpStatus().toString() : "No Response",
                    result.getVirusCheck() != null ? result.getVirusCheck() : "N/A",
                    result.getCreatedAt() != null ? result.getCreatedAt().format(DATE_FORMATTER) : "N/A",
                    result.getVirusDetails() != null ? result.getVirusDetails() : ""
                });
            }
            
            csvWriter.close();
            return stringWriter.toString().getBytes("UTF-8");
            
        } catch (Exception e) {
            throw new RuntimeException("Error generating CSV", e);
        }
    }
    
    /**
     * Export domain results to PDF format
     */
    public byte[] exportToPDF(List<DomainResult> results) {
        try {
            ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
            PdfWriter pdfWriter = new PdfWriter(outputStream);
            PdfDocument pdfDocument = new PdfDocument(pdfWriter);
            Document document = new Document(pdfDocument);
            
            // Title
            Paragraph title = new Paragraph("Domain Checker Report")
                    .setTextAlignment(TextAlignment.CENTER)
                    .setFontSize(20)
                    .setBold();
            document.add(title);
            
            // Subtitle
            Paragraph subtitle = new Paragraph("Generated by Rishiraj Vishwakarma")
                    .setTextAlignment(TextAlignment.CENTER)
                    .setFontSize(12)
                    .setMarginBottom(20);
            document.add(subtitle);
            
            // Summary
            long totalDomains = results.size();
            long reachableCount = results.stream().mapToLong(r -> r.getReachable() ? 1 : 0).sum();
            long safeCount = results.stream().mapToLong(r -> 
                r.getVirusCheck() != null && r.getVirusCheck().toLowerCase().contains("safe") ? 1 : 0).sum();
            
            Paragraph summary = new Paragraph(String.format(
                "Total Domains: %d | Reachable: %d | Safe: %d | Generated: %s",
                totalDomains, reachableCount, safeCount, 
                java.time.LocalDateTime.now().format(DATE_FORMATTER)
            )).setMarginBottom(20);
            document.add(summary);
            
            // Table
            Table table = new Table(UnitValue.createPercentArray(new float[]{3, 1, 1, 2, 2}))
                    .setWidth(UnitValue.createPercentValue(100));
            
            // Table header
            table.addHeaderCell("Domain");
            table.addHeaderCell("Reachable");
            table.addHeaderCell("HTTP Status");
            table.addHeaderCell("Virus Check");
            table.addHeaderCell("Checked At");
            
            // Table data
            for (DomainResult result : results) {
                table.addCell(result.getDomain());
                table.addCell(result.getReachable() ? "Yes" : "No");
                table.addCell(result.getHttpStatus() != null ? result.getHttpStatus().toString() : "No Response");
                String check = result.getVirusCheck() != null ? result.getVirusCheck() : "N/A";
                String details = result.getVirusDetails();
                table.addCell(details != null && !details.isBlank() ? check + " - " + details : check);
                table.addCell(result.getCreatedAt() != null ? result.getCreatedAt().format(DATE_FORMATTER) : "N/A");
            }
            
            document.add(table);
            
            // Footer
            Paragraph footer = new Paragraph("© 2024 Rishiraj Vishwakarma. All rights reserved.")
                    .setTextAlignment(TextAlignment.CENTER)
                    .setFontSize(10)
                    .setMarginTop(30);
            document.add(footer);
            
            document.close();
            return outputStream.toByteArray();
            
        } catch (Exception e) {
            throw new RuntimeException("Error generating PDF", e);
        }
    }
    
    /**
     * Export domain results to Word format
     */
    public byte[] exportToWord(List<DomainResult> results) {
        try {
            XWPFDocument document = new XWPFDocument();
            
            // Title
            XWPFParagraph titleParagraph = document.createParagraph();
            titleParagraph.setAlignment(ParagraphAlignment.CENTER);
            XWPFRun titleRun = titleParagraph.createRun();
            titleRun.setText("Domain Checker Report");
            titleRun.setBold(true);
            titleRun.setFontSize(20);
            
            // Subtitle
            XWPFParagraph subtitleParagraph = document.createParagraph();
            subtitleParagraph.setAlignment(ParagraphAlignment.CENTER);
            XWPFRun subtitleRun = subtitleParagraph.createRun();
            subtitleRun.setText("Generated by Rishiraj Vishwakarma");
            subtitleRun.setFontSize(12);
            subtitleRun.addBreak();
            
            // Summary
            long totalDomains = results.size();
            long reachableCount = results.stream().mapToLong(r -> r.getReachable() ? 1 : 0).sum();
            long safeCount = results.stream().mapToLong(r -> 
                r.getVirusCheck() != null && r.getVirusCheck().toLowerCase().contains("safe") ? 1 : 0).sum();
            
            XWPFParagraph summaryParagraph = document.createParagraph();
            XWPFRun summaryRun = summaryParagraph.createRun();
            summaryRun.setText(String.format(
                "Total Domains: %d | Reachable: %d | Safe: %d | Generated: %s",
                totalDomains, reachableCount, safeCount, 
                java.time.LocalDateTime.now().format(DATE_FORMATTER)
            ));
            summaryRun.addBreak();
            summaryRun.addBreak();
            
            // Table
            XWPFTable table = document.createTable(results.size() + 1, 5);
            
            // Table header
            XWPFTableRow headerRow = table.getRow(0);
            headerRow.getCell(0).setText("Domain");
            headerRow.getCell(1).setText("Reachable");
            headerRow.getCell(2).setText("HTTP Status");
            headerRow.getCell(3).setText("Virus Check");
            headerRow.getCell(4).setText("Checked At");
            
            // Make header bold
            for (int i = 0; i < 5; i++) {
                XWPFParagraph headerPara = headerRow.getCell(i).getParagraphs().get(0);
                XWPFRun headerRun = headerPara.getRuns().get(0);
                headerRun.setBold(true);
            }
            
            // Table data
            for (int i = 0; i < results.size(); i++) {
                DomainResult result = results.get(i);
                XWPFTableRow row = table.getRow(i + 1);
                row.getCell(0).setText(result.getDomain());
                row.getCell(1).setText(result.getReachable() ? "Yes" : "No");
                row.getCell(2).setText(result.getHttpStatus() != null ? result.getHttpStatus().toString() : "No Response");
                row.getCell(3).setText(result.getVirusCheck() != null ? result.getVirusCheck() : "N/A");
                row.getCell(4).setText(result.getCreatedAt() != null ? result.getCreatedAt().format(DATE_FORMATTER) : "N/A");
            }
            
            // Footer
            XWPFParagraph footerParagraph = document.createParagraph();
            footerParagraph.setAlignment(ParagraphAlignment.CENTER);
            XWPFRun footerRun = footerParagraph.createRun();
            footerRun.setText("© 2024 Rishiraj Vishwakarma. All rights reserved.");
            footerRun.setFontSize(10);
            
            ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
            document.write(outputStream);
            document.close();
            
            return outputStream.toByteArray();
            
        } catch (Exception e) {
            throw new RuntimeException("Error generating Word document", e);
        }
    }
}
package com.example.domainchecker.service;

import com.example.domainchecker.entity.DomainResult;
import com.opencsv.CSVWriter;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Table;
import com.itextpdf.layout.properties.TextAlignment;
import com.itextpdf.layout.properties.UnitValue;
import com.itextpdf.layout.element.Image;
import com.itextpdf.io.image.ImageDataFactory;
import org.apache.poi.xwpf.usermodel.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.io.ByteArrayOutputStream;
import java.io.StringWriter;
import java.time.format.DateTimeFormatter;
import java.util.List;
import java.util.Objects;
import java.nio.file.Files;
import java.nio.file.Path;

@Service
public class ExportService {
    @Autowired
    private DomainCheckerService domainCheckerService;
    
    private static final DateTimeFormatter DATE_FORMATTER = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
    
    /**
     * Export domain results to CSV format
     */
    public byte[] exportToCSV(List<DomainResult> results) {
        try {
            StringWriter stringWriter = new StringWriter();
            CSVWriter csvWriter = new CSVWriter(stringWriter);
            
            // Write header (including Selenium columns)
            csvWriter.writeNext(new String[]{
                "Domain", "Reachable", "HTTP Status", "Curl Check", "Virus Check", "Checked At", "Virus Details",
                "Selenium Reachable", "Selenium Title", "Selenium Source Length", "Selenium Load Time (ms)", "Selenium Error"
            });
            
            // Write data
            for (DomainResult result : results) {
                String curl = result.getCurlCheck();
                if (curl == null || curl.isBlank()) {
                    // compute on the fly for exports to reflect current connectivity
                    curl = domainCheckerService.checkCurlStyle(result.getDomain());
                }
                csvWriter.writeNext(new String[]{
                    result.getDomain(),
                    result.getReachable() ? "Yes" : "No",
                    result.getHttpStatus() != null ? result.getHttpStatus().toString() : "No Response",
                    curl != null ? curl : "-",
                    result.getVirusCheck() != null ? result.getVirusCheck() : "N/A",
                    result.getCreatedAt() != null ? result.getCreatedAt().format(DATE_FORMATTER) : "N/A",
                    result.getVirusDetails() != null ? result.getVirusDetails() : "",
                    result.getSeleniumReachable() == null ? "N/A" : (result.getSeleniumReachable() ? "Yes" : "No"),
                    result.getSeleniumTitle() != null ? result.getSeleniumTitle() : "",
                    result.getSeleniumPageSourceLength() != null ? result.getSeleniumPageSourceLength().toString() : "",
                    result.getSeleniumLoadTimeMs() != null ? result.getSeleniumLoadTimeMs().toString() : "",
                    result.getSeleniumError() != null ? result.getSeleniumError() : ""
                });
            }
            
            csvWriter.close();
            return stringWriter.toString().getBytes("UTF-8");
            
        } catch (Exception e) {
            throw new RuntimeException("Error generating CSV", e);
        }
    }
    
    /**
     * Export domain results to PDF format
     */
    public byte[] exportToPDF(List<DomainResult> results) {
        try {
            ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
            PdfWriter pdfWriter = new PdfWriter(outputStream);
            PdfDocument pdfDocument = new PdfDocument(pdfWriter);
            Document document = new Document(pdfDocument);
            
            // Title
            Paragraph title = new Paragraph("Domain Checker Report")
                    .setTextAlignment(TextAlignment.CENTER)
                    .setFontSize(20)
                    .setBold();
            document.add(title);
            
            // Subtitle
            Paragraph subtitle = new Paragraph("Generated by Rishiraj Vishwakarma")
                    .setTextAlignment(TextAlignment.CENTER)
                    .setFontSize(12)
                    .setMarginBottom(20);
            document.add(subtitle);
            
            // Summary
            long totalDomains = results.size();
            long reachableCount = results.stream().mapToLong(r -> r.getReachable() ? 1 : 0).sum();
            long safeCount = results.stream().mapToLong(r -> 
                r.getVirusCheck() != null && r.getVirusCheck().toLowerCase().contains("safe") &&
                !(r.getVirusCheck().toLowerCase().contains("unsafe") || r.getVirusCheck().toLowerCase().contains("malicious") || r.getVirusCheck().toLowerCase().contains("suspicious"))
                ? 1 : 0).sum();
            
            Paragraph summary = new Paragraph(String.format(
                "Total Domains: %d | Reachable: %d | Safe: %d | Generated: %s",
                totalDomains, reachableCount, safeCount, 
                java.time.LocalDateTime.now().format(DATE_FORMATTER)
            )).setMarginBottom(20);
            document.add(summary);
            
            // Table (add Selenium columns)
            Table table = new Table(UnitValue.createPercentArray(new float[]{3, 1, 1, 2, 2, 1.2f, 2, 1.3f, 1.3f}))
                    .setWidth(UnitValue.createPercentValue(100));
            
            // Table header
            table.addHeaderCell("Domain");
            table.addHeaderCell("Reachable");
            table.addHeaderCell("HTTP Status");
            table.addHeaderCell("Virus Check");
            table.addHeaderCell("Checked At");
            table.addHeaderCell("Sel Reach");
            table.addHeaderCell("Sel Title");
            table.addHeaderCell("Sel Src Len");
            table.addHeaderCell("Sel Load ms");
            
            // Table data
            for (DomainResult result : results) {
                table.addCell(result.getDomain());
                table.addCell(result.getReachable() ? "Yes" : "No");
                table.addCell(result.getHttpStatus() != null ? result.getHttpStatus().toString() : "No Response");
                String check = result.getVirusCheck() != null ? result.getVirusCheck() : "N/A";
                String details = result.getVirusDetails();
                table.addCell(details != null && !details.isBlank() ? check + " - " + details : check);
                table.addCell(result.getCreatedAt() != null ? result.getCreatedAt().format(DATE_FORMATTER) : "N/A");
                table.addCell(result.getSeleniumReachable() == null ? "N/A" : (result.getSeleniumReachable() ? "Yes" : "No"));
                table.addCell(result.getSeleniumTitle() != null ? result.getSeleniumTitle() : "");
                table.addCell(result.getSeleniumPageSourceLength() != null ? result.getSeleniumPageSourceLength().toString() : "");
                table.addCell(result.getSeleniumLoadTimeMs() != null ? result.getSeleniumLoadTimeMs().toString() : "");
            }
            
            document.add(table);
            
            // Footer
            Paragraph footer = new Paragraph("Â© 2024 Rishiraj Vishwakarma. All rights reserved.")
                    .setTextAlignment(TextAlignment.CENTER)
                    .setFontSize(10)
                    .setMarginTop(30);
            document.add(footer);
            
            document.close();
            return outputStream.toByteArray();
            
        } catch (Exception e) {
            throw new RuntimeException("Error generating PDF", e);
        }
    }
    
    /**
     * Export domain results to Word format
     */
    public byte[] exportToWord(List<DomainResult> results) {
        try {
            XWPFDocument document = new XWPFDocument();
            
            // Title
            XWPFParagraph titleParagraph = document.createParagraph();
            titleParagraph.setAlignment(ParagraphAlignment.CENTER);
            XWPFRun titleRun = titleParagraph.createRun();
            titleRun.setText("Domain Checker Report");
            titleRun.setBold(true);
            titleRun.setFontSize(20);
            
            // Subtitle
            XWPFParagraph subtitleParagraph = document.createParagraph();
            subtitleParagraph.setAlignment(ParagraphAlignment.CENTER);
            XWPFRun subtitleRun = subtitleParagraph.createRun();
            subtitleRun.setText("Generated by Rishiraj Vishwakarma");
            subtitleRun.setFontSize(12);
            subtitleRun.addBreak();
            
            // Summary
            long totalDomains = results.size();
            long reachableCount = results.stream().mapToLong(r -> r.getReachable() ? 1 : 0).sum();
            long safeCount = results.stream().mapToLong(r -> 
                r.getVirusCheck() != null && r.getVirusCheck().toLowerCase().contains("safe") ? 1 : 0).sum();
            
            XWPFParagraph summaryParagraph = document.createParagraph();
            XWPFRun summaryRun = summaryParagraph.createRun();
            summaryRun.setText(String.format(
                "Total Domains: %d | Reachable: %d | Safe: %d | Generated: %s",
                totalDomains, reachableCount, safeCount, 
                java.time.LocalDateTime.now().format(DATE_FORMATTER)
            ));
            summaryRun.addBreak();
            summaryRun.addBreak();
            
            // Table (add Selenium columns)
            XWPFTable table = document.createTable(results.size() + 1, 9);
            
            // Table header
            XWPFTableRow headerRow = table.getRow(0);
            headerRow.getCell(0).setText("Domain");
            headerRow.getCell(1).setText("Reachable");
            headerRow.getCell(2).setText("HTTP Status");
            headerRow.getCell(3).setText("Virus Check");
            headerRow.getCell(4).setText("Checked At");
            headerRow.getCell(5).setText("Sel Reach");
            headerRow.getCell(6).setText("Sel Title");
            headerRow.getCell(7).setText("Sel Src Len");
            headerRow.getCell(8).setText("Sel Load ms");
            
            // Make header bold
            for (int i = 0; i < 9; i++) {
                XWPFParagraph headerPara = headerRow.getCell(i).getParagraphs().get(0);
                XWPFRun headerRun = headerPara.getRuns().get(0);
                headerRun.setBold(true);
            }
            
            // Table data
            for (int i = 0; i < results.size(); i++) {
                DomainResult result = results.get(i);
                XWPFTableRow row = table.getRow(i + 1);
                row.getCell(0).setText(result.getDomain());
                row.getCell(1).setText(result.getReachable() ? "Yes" : "No");
                row.getCell(2).setText(result.getHttpStatus() != null ? result.getHttpStatus().toString() : "No Response");
                row.getCell(3).setText(result.getVirusCheck() != null ? result.getVirusCheck() : "N/A");
                row.getCell(4).setText(result.getCreatedAt() != null ? result.getCreatedAt().format(DATE_FORMATTER) : "N/A");
                row.getCell(5).setText(result.getSeleniumReachable() == null ? "N/A" : (result.getSeleniumReachable() ? "Yes" : "No"));
                row.getCell(6).setText(result.getSeleniumTitle() != null ? result.getSeleniumTitle() : "");
                row.getCell(7).setText(result.getSeleniumPageSourceLength() != null ? result.getSeleniumPageSourceLength().toString() : "");
                row.getCell(8).setText(result.getSeleniumLoadTimeMs() != null ? result.getSeleniumLoadTimeMs().toString() : "");
            }
            
            // Footer
            XWPFParagraph footerParagraph = document.createParagraph();
            footerParagraph.setAlignment(ParagraphAlignment.CENTER);
            XWPFRun footerRun = footerParagraph.createRun();
            footerRun.setText("Â© 2024 Rishiraj Vishwakarma. All rights reserved.");
            footerRun.setFontSize(10);
            
            ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
            document.write(outputStream);
            document.close();
            
            return outputStream.toByteArray();
            
        } catch (Exception e) {
            throw new RuntimeException("Error generating Word document", e);
        }
    }

    /**
     * Generate a simple, presentation-style PDF that highlights the application's features
     * and optionally includes demo screenshots supplied as URLs or local file paths.
     */
    public byte[] exportFeaturesPresentation(List<String> imageSources, String customTitle) {
        try {
            ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
            PdfWriter pdfWriter = new PdfWriter(outputStream);
            PdfDocument pdfDocument = new PdfDocument(pdfWriter);
            Document document = new Document(pdfDocument);

            String titleText = (customTitle == null || customTitle.isBlank())
                    ? "Domain Checker â Features Overview" : customTitle.trim();

            // Cover page
            document.add(new Paragraph(titleText)
                    .setTextAlignment(TextAlignment.CENTER)
                    .setFontSize(24)
                    .setBold()
                    .setMarginTop(60));
            document.add(new Paragraph("Presentation generated " + java.time.LocalDateTime.now().format(DATE_FORMATTER))
                    .setTextAlignment(TextAlignment.CENTER)
                    .setFontSize(10)
                    .setMarginBottom(30));

            // Features slide
            Paragraph featuresHeader = new Paragraph("Key Features")
                    .setFontSize(18)
                    .setBold()
                    .setMarginBottom(10);
            document.add(featuresHeader);

            document.add(new Paragraph("â¢ Ping reachability (best-effort ICMP)").setMargin(0));
            document.add(new Paragraph("â¢ HTTP status checks with redirects").setMargin(0));
            document.add(new Paragraph("â¢ VirusTotal v3 reputation (optional API key)").setMargin(0));
            document.add(new Paragraph("â¢ Curl-style latency/status summary").setMargin(0));
            document.add(new Paragraph("â¢ Headless Selenium probe (title, source length, load time)").setMargin(0));
            document.add(new Paragraph("â¢ Web UI with filters, sorting, pagination, quick stats").setMargin(0));
            document.add(new Paragraph("â¢ Exports: CSV, PDF, Word").setMarginBottom(20));

            // Screenshots slides (each image on its own page, scaled to fit width)
            if (imageSources != null) {
                for (String src : imageSources) {
                    if (src == null || src.isBlank()) continue;
                    try {
                        Image image = createImage(src.trim());
                        if (image != null) {
                            document.add(new Paragraph(" ").setMarginTop(10));
                            image.setAutoScale(true);
                            document.add(image.setMarginTop(10));
                            document.add(new Paragraph(Objects.toString(src, ""))
                                    .setTextAlignment(TextAlignment.CENTER)
                                    .setFontSize(9)
                                    .setMarginBottom(20));
                            // Start a new page after each screenshot
                            document.add(new Paragraph(" "));
                            pdfDocument.addNewPage();
                        }
                    } catch (Exception ignored) {
                        // Skip images we can't load; continue generating the PDF
                    }
                }
            }

            // Remove the last trailing blank page if we added one without content
            int totalPages = pdfDocument.getNumberOfPages();
            if (totalPages > 1 && pdfDocument.getPage(totalPages).getContentBytes().length == 0) {
                pdfDocument.removePage(totalPages);
            }

            document.close();
            return outputStream.toByteArray();
        } catch (Exception e) {
            throw new RuntimeException("Error generating features presentation PDF", e);
        }
    }

    private Image createImage(String source) throws Exception {
        try {
            if (source.startsWith("http://") || source.startsWith("https://")) {
                return new Image(ImageDataFactory.create(source));
            }
            // Treat as local file path
            Path path = Path.of(source);
            byte[] bytes = Files.readAllBytes(path);
            return new Image(ImageDataFactory.create(bytes));
        } catch (Exception e) {
            throw e;
        }
    }
}